#BlueJ class context
comment0.target=Valley
comment1.params=x\ y
comment1.target=Valley(int,\ int)
comment1.text=\r\n\ Contructor\ de\ type\ VineYard\ Objects\ \r\n\ Crea\ el\ vaye\ y\ lo\ hace\ visible\ a\ la\ medida\ \r\n\ @param\ x\ tama\u00F1o\ en\ esta\ dimension\ ,\ y\ tama\u00F1o\ en\ esta\ dimension\ \r\n
comment10.params=
comment10.target=java.lang.String[]\ rainFalls()
comment11.params=
comment11.target=void\ makeVisible()
comment11.text=\r\n\ Vuelve\ Visible\ el\ objeto\ de\ tipo\ valle\ \r\n
comment12.params=
comment12.target=void\ makeInvisible()
comment12.text=\r\n\ Vuelve\ invisible\ el\ objeto\ de\ tipo\ valle\ \r\n
comment13.params=
comment13.target=void\ finish()
comment13.text=\ \r\n\ Finaliza\ la\ ejecucion\ de\ una\ simulacion\ \r\n
comment14.params=
comment14.target=void\ ok()
comment15.params=simbolo
comment15.target=void\ zoom(java.lang.String)
comment2.params=name\ xi\ xf
comment2.target=void\ openVineyard(java.lang.String,\ int,\ int)
comment2.text=\r\n\ Abre\ un\ nuevo\ VineYard\ teniendo\ en\ cuenta\ que\ no\ pueden\ estar\ uno\ encima\ del\ otro\ y\ ademas\ que\ tienen\ que\ tener\ nombre\ diferentes\r\n\ crea\ un\ ArrayList\ de\ posiciones\ para\ el\ VineYard\ y\ uno\ para\ objetos\ de\ tipo\ VineYard\r\n\ @param\ \ name\ nombre\ del\ VineYard,\ xi\ posicion\ en\ X\ inicial\ ,\ xf\ posicion\ en\ X\ final\ \r\n
comment3.params=name
comment3.target=void\ closeVineyard(java.lang.String)
comment3.text=\r\n\ Elimina\ un\ VineYard\ completamente,\ de\ su\ lista\ de\ VineYards\ y\ su\ lista\ de\ cordenadas\ ademas\ lo\ vuelve\ invisible\r\n
comment4.params=lowerEnd\ higherEnd
comment4.target=void\ addTrap(int[],\ int[])
comment4.text=\r\n\ Crea\ una\ lona\ o\ Tarp\ \r\n\ @param\ lowerEnd\ coordenadas\ X1,\ Y1,\ higherEnd\ coordenadas\ X2,\ Y2\ \r\n
comment5.params=position
comment5.target=void\ removeTrap(int)
comment5.text=\r\n\ Elimina\ una\ trampa\ en\ orden\ de\ creacion\ o\ posicion\ en\ arreglo\ \r\n\ @param\ int\ position\ a\ borrar\ \r\n
comment6.params=trap\ x
comment6.target=void\ makePuncture(int,\ int)
comment6.text=\r\n\ Realiza\ un\ hueco\ en\ una\ posicion\ Y\ dada\ y\ en\ un\ numero\ de\ lona\ dado\ \r\n\ @param\ trap\ o\ lona,\ x\ coordenada\ o\ distancia\ \r\n
comment7.params=trap\ position
comment7.target=void\ patchPuncture(int,\ int)
comment7.text=\r\n\ Elimina\ o\ parcha\ un\ hueco\ realizado\ dada\ una\ lona\ y\ una\ coordeanda\ lona\ \r\n\ @param\ trap\ o\ lona,\ position,\ coordeanda\ x\ \r\n
comment8.params=x
comment8.target=void\ startRain(int)
comment8.text=\r\n\ Cuando\ se\ ejecuta\ este\ metodo\ empieza\ a\ llover\ \r\n
comment9.params=position
comment9.target=void\ stopRain(int)
comment9.text=\r\n\ Cuando\ se\ invoca\ este\ metodo\ para\ la\ lluvia\ \r\n
numComments=16
